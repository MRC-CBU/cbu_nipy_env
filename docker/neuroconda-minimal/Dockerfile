# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2021/01/22 10:30:25 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

FROM neurodebian:stretch

USER root

ARG DEBIAN_FRONTEND="noninteractive"

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends neurodebian-freeze \
    && nd_freeze  20210121 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           libdbus-glib-1-2 \
           libjpeg62 \
           libgtk2.0-0 \
           libgl1-mesa-dev \
           libgl1-mesa-dri \
           libglu1-mesa-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY ["neuroconda.yml", "/"]

ENV CONDA_DIR="/opt/miniconda-py38_4.9.2" \
    PATH="/opt/miniconda-py38_4.9.2/bin:$PATH"
RUN export PATH="/opt/miniconda-py38_4.9.2/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-py38_4.9.2 \
    && rm -f "$conda_installer" \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && sync && conda clean -y --all && sync \
    && conda env create -q --name neuroconda --file neuroconda.yml \
    && rm -rf ~/.cache/pip/*

RUN sed -i '$i. /opt/miniconda-py38_4.9.2/etc/profile.d/conda.sh && conda activate neuroconda' $ND_ENTRYPOINT

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:stretch" \
    \n    ], \
    \n    [ \
    \n      "ndfreeze", \
    \n      { \
    \n        "date": "20210121" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "libdbus-glib-1-2", \
    \n        "libjpeg62", \
    \n        "libgtk2.0-0", \
    \n        "libgl1-mesa-dev", \
    \n        "libgl1-mesa-dri", \
    \n        "libglu1-mesa-dev" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "neuroconda.yml", \
    \n        "/" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "version": "py38_4.9.2", \
    \n        "create_env": "neuroconda", \
    \n        "yaml_file": "neuroconda.yml" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "add_to_entrypoint", \
    \n      ". /opt/miniconda-py38_4.9.2/etc/profile.d/conda.sh && conda activate neuroconda" \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
